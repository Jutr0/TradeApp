{"version":3,"sources":["pages/JourneyPage.tsx","pages/TradePage.tsx","pages/HomePage.tsx","components/HeroCard/HeroStatsListItem.tsx","components/HeroCard/HeroSatsList.tsx","components/HeroCard/HeroCard.tsx","utils/API.ts","pages/InventoryPage.tsx","pages/SettingsPage.tsx","components/Shop/CardFromPack.tsx","components/Shop/ShopPackListItem.tsx","components/Shop/ShopPacksList.tsx","pages/ShopPage.tsx","components/NavBarApp/NavBarApp.tsx","components/Sider/SiderMenuListItem.tsx","components/Sider/SiderMenu.tsx","components/NavSider.tsx","components/FillForm/StatsListItem.tsx","components/FillForm/CharacterForm.tsx","components/FillForm/HeroFillFormListItem.tsx","pages/FillForm.tsx","App.tsx","index.tsx"],"names":["withRouter","Typography","variant","HeroStatsListItem","props","icon","stat","Divider","ListItem","ListItemAvatar","style","marginRight","marginLeft","ListItemText","primary","name","secondary","value","HeroStatsList","stats","health","strength","ability","swiftness","List","useStyles","makeStyles","media","height","heading","width","textAlign","padding","HeroCard","id","thumbnail","useState","statsCollapsed","setStatsCollapsed","classes","raised","setRaised","Grid","justifyItems","item","xs","sm","md","lg","xl","Card","cursor","onMouseEnter","onMouseLeave","onClick","className","noWrap","component","CardMedia","image","path","extension","CardContent","Collapse","position","background","boxShadow","in","API","this","defaultParams","params","baseURL","url","ts","apikey","hash","call","a","apiParams","axios","get","then","res","catch","e","console","error","apiResponse","data","addCharacter","character","post","getCharacter","characters","setCharacters","useRef","useEffect","limit","current","results","Box","Container","fixed","container","spacing","justify","map","step","CircularProgress","CardFromPack","setOpenModal","elevation","tilePack","display","alignItems","tileCards","flexDirection","justifyContent","cardRoot","ShopPackListItem","cardsToRender","setCardsToRender","pack","cards","tempCardsToRender","Array","i","length","push","GridListTile","cols","rows","tile","GridList","cellHeight","borderRight","root","CardActions","disableSpacing","Button","color","size","ShopPacksList","open","openModal","packsData","Modal","onClose","src","NavBarApp","AppBar","openMenu","startIcon","SiderMenuListItem","index","selectedIndex","setSelectedIndex","text","closeMenu","history","useHistory","location","useLocation","button","selected","pathname","ListItemIcon","paper","SiderMenu","setOpen","menuOpts","onOpen","ModalProps","onBackdropClick","swipeAreaWidth","hysteresis","disableBackdropTransition","num","NavSider","setOpenMenu","val","StatsListItem","setStat","statHelperText","TextField","helperText","onChange","target","inputProps","max","min","minWidth","type","label","CharacterForm","dialog","agility","setAgility","setStrength","magic","setMagic","resistance","setResistance","agilityHelperText","setAgilityHelperText","strengthHelperText","setStrengthHelperText","magicHelperText","setMagicHelperText","resistanceHelperText","setResistanceHelperText","openSnackBar","setOpenSnackBar","log","handleCloseSnackBar","handleSave","m","r","s","validateStats","characterId","Dialog","setDialog","TransitionComponent","Slide","transitionDuration","scroll","CardHeader","title","subheader","margin","onSubmit","fullWidth","Snackbar","autoHideDuration","Alert","severity","HeroFillFormListItem","Avatar","toString","loading","setLoading","pageStr","match","page","Number","parseInt","offset","handlePageChange","undefined","App","marginBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43da7490.chunk.js","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst JourneyPage = () => {\n  return <Typography variant=\"h2\">JourneyPage</Typography>;\n};\n\nexport default withRouter(JourneyPage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst TradePage = () => {\n  return <Typography variant=\"h2\">TradePage</Typography>;\n};\n\nexport default withRouter(TradePage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return <Typography variant=\"h2\">HomePage</Typography>;\n};\n\nexport default withRouter(HomePage);\n","import {\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\n\nconst HeroStatsListItem = (props: IProps) => {\n  const { icon, stat } = props;\n\n  return (\n    <>\n      <Divider />\n      <ListItem>\n        <ListItemAvatar style={{ marginRight: -20, marginLeft: -10 }}>\n          {icon}\n        </ListItemAvatar>\n        <ListItemText primary={stat.name} secondary={stat.value} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default HeroStatsListItem;\n\ntype IProps = {\n  stat: {\n    name: string;\n    value: number;\n  };\n  icon: ReactElement;\n};\n","import {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport FlashOnOutlinedIcon from \"@material-ui/icons/FlashOnOutlined\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EmojiSymbolsOutlinedIcon from \"@material-ui/icons/EmojiSymbolsOutlined\";\nimport DirectionsRunOutlinedIcon from \"@material-ui/icons/DirectionsRunOutlined\";\n\nimport HeroStatsListItem from \"./HeroStatsListItem\";\n\nconst HeroStatsList = (props: IProps) => {\n  const { health, strength, ability, swiftness } = props.stats;\n\n  return (\n    <List>\n      <HeroStatsListItem\n        stat={{ name: \"Health\", value: health }}\n        icon={<FavoriteBorderOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Strength\", value: strength }}\n        icon={<FlashOnOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Ability\", value: ability }}\n        icon={<EmojiSymbolsOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Swiftness\", value: swiftness }}\n        icon={<DirectionsRunOutlinedIcon />}\n      />\n    </List>\n  );\n};\n\nexport default HeroStatsList;\n\ntype IProps = {\n  stats: {\n    health: number;\n    strength: number;\n    ability: number;\n    swiftness: number;\n  };\n};\n","import {\n  Card,\n  CardContent,\n  CardMedia,\n  Collapse,\n  Grid,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useState } from \"react\";\nimport { Ithumbnail } from \"../../utils/customTypes\";\nimport HeroStatsList from \"./HeroSatsList\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n  },\n  heading: {\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: \"10px 0\",\n  },\n});\n\nconst HeroCard = (props: IProps) => {\n  const { id, name, thumbnail } = props;\n\n  const stats = { strength: 20, ability: 23, swiftness: 39, health: 54 };\n  const [statsCollapsed, setStatsCollapsed] = useState(false);\n  const classes = useStyles();\n  const [raised, setRaised] = useState(false);\n\n  return (\n    <Grid\n      style={{ justifyItems: \"center\" }}\n      item\n      xs={10}\n      sm={4}\n      md={3}\n      lg={2}\n      xl={1}\n    >\n      <Card\n        raised={raised}\n        style={{ cursor: \"pointer\" }}\n        onMouseEnter={() => setRaised(true)}\n        onMouseLeave={() => {\n          setRaised(false); /*setStatsCollapsed(false)*/\n        }}\n        onClick={() => setStatsCollapsed(!statsCollapsed)}\n      >\n        <Typography\n          className={classes.heading}\n          noWrap\n          variant=\"h5\"\n          component=\"div\"\n        >\n          {name}\n        </Typography>\n        <CardMedia\n          className={classes.media}\n          image={`${thumbnail.path}.${thumbnail.extension}`}\n        />\n        <CardContent>\n          <Typography variant=\"subtitle2\">Stats</Typography>\n\n          {/* Different style of collapsing stats but Worse in my opinion */}\n          <Collapse\n            style={\n              id < 0\n                ? {\n                    position: \"absolute\",\n                    background: \"white\",\n                    boxShadow: \"0 5px 5px 0 #555\",\n                  }\n                : {}\n            }\n            in={statsCollapsed}\n          >\n            <HeroStatsList stats={stats} />\n          </Collapse>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default HeroCard;\n\ntype IProps = {\n  id: number;\n  name: string;\n  thumbnail: Ithumbnail;\n};\n","import axios from \"axios\";\nimport { ICharacterInfo } from \"../components/FillForm/CharacterForm\";\nimport { IApiResponse, ISearchParams } from \"./customTypes\";\n\nexport default class API {\n  //sets base parameters for api call\n  private static defaultParams: ISearchParams = {\n    ts: 1,\n    apikey: \"0496dd1c25a6148054d36d77a65cfe14\",\n    hash: \"1bc050ca4051e97e6e076c02cd39b807\",\n  };\n  static get getDefaultParams() {\n    return this.defaultParams;\n  }\n  static set setDefaultParams(params: ISearchParams) {\n    this.defaultParams = params;\n  }\n\n  //sets base URL for api call\n  private static baseURL: string = \"http://gateway.marvel.com/v1/public/\";\n  static get getBaseURL() {\n    return this.baseURL;\n  }\n  static set setBaseURL(url: string) {\n    this.baseURL = url;\n  }\n\n  //calls MarvelApi and returns data\n  static call = async (url?: string, params?: ISearchParams) => {\n    const apiParams = { ...API.defaultParams, ...(params || {}) };\n    const apiResponse = await axios\n      .get(API.baseURL + url, { params: apiParams })\n      .then((res: IApiResponse) => res)\n      .catch((e) => {\n        console.error(e);\n        return undefined;\n      });\n\n    return apiResponse?.data;\n  };\n\n  static addCharacter = async(character:ICharacterInfo) =>{\n    await axios.post('http://geng.wtf:3001/api/characters',character)\n      .catch(e=>console.error(e))\n  }\n  static getCharacter = async (id:number)=>{\n    const character:ICharacterInfo | undefined= await axios.get('http://geng.wtf:3001/api/characters/'+id)\n      .then((res:{data:ICharacterInfo})=>res.data)\n      .catch(e=>{console.error(e); return undefined})\n\n    return character;\n\n  }\n}\n","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport HeroCard from \"../components/HeroCard/HeroCard\";\nimport { IApiDataResponse, ICharacterData } from \"../utils/customTypes\";\nimport API from \"../utils/API\";\n\nconst InventoryPage = () => {\n  const [characters, setCharacters] = useState<ICharacterData[]>();\n  const apiResponse = useRef<IApiDataResponse>();\n\n  useEffect(() => {\n    API.call(\"characters\", { limit: 20 })\n      .then((res) => (apiResponse.current = res?.data))\n      .then((res) => setCharacters(res?.results));\n  }, []);\n  return (\n    <Box>\n      <Typography variant=\"h2\">InventoryPage</Typography>\n      <Container fixed>\n        <Grid container spacing={5} justify=\"center\">\n          {characters ? (\n            characters.map((step) => {\n              return (\n                <HeroCard\n                  key={step.id}\n                  id={step.id}\n                  thumbnail={step.thumbnail}\n                  name={step.name}\n                />\n              );\n            })\n          ) : (\n            <Grid item>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default withRouter(InventoryPage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SettingsPage = () => {\n  return <Typography variant=\"h2\">SettingsPage</Typography>;\n};\n\nexport default withRouter(SettingsPage);\n","import { Card, CardMedia } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst CardFromPack = (props: IProps) => {\n  const { setOpenModal, image } = props;\n  return (\n    <Card\n      elevation={0}\n      onClick={() => {\n        setOpenModal(image);\n      }}\n    >\n      <CardMedia component=\"img\" image={image} />\n    </Card>\n  );\n};\n\nexport default CardFromPack;\n\ntype IProps = {\n  image: string;\n  setOpenModal: (image: string) => void;\n};\n","import {\n  Button,\n  CardActions,\n  CardMedia,\n  Divider,\n  Grid,\n  GridList,\n  GridListTile,\n  ListItem,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { IImgModal } from \"../../utils/customTypes\";\nimport CardFromPack from \"./CardFromPack\";\n\nconst useStyles = makeStyles({\n  tilePack: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n  tileCards: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n  },\n\n  cardRoot: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n});\n\nconst ShopPackListItem = (props: IProps) => {\n  const classes = useStyles();\n\n  const [cardsToRender, setCardsToRender] = useState<JSX.Element[]>([]);\n  const { pack, cards, setOpenModal } = props;\n\n  useEffect(() => {\n    let tempCardsToRender = Array<JSX.Element>(0);\n    for (let i = 0; i < cards.length; i += 2) {\n      tempCardsToRender.push(\n        <GridListTile\n          cols={2}\n          rows={2}\n          classes={{\n            tile: classes.tileCards,\n          }}\n        >\n          <CardFromPack\n            image={cards[i]}\n            setOpenModal={(image: string) => setOpenModal(image)}\n          />\n          <CardFromPack\n            image={cards[i + 1]}\n            setOpenModal={(image: string) => setOpenModal(image)}\n          />\n        </GridListTile>\n      );\n    }\n\n    setCardsToRender(tempCardsToRender);\n  }, []);\n\n  return (\n    <>\n      <br />\n      <Divider />\n      <br />\n      <ListItem>\n        <GridList cellHeight=\"auto\" cols={9}>\n          <GridListTile\n            cols={3}\n            rows={2}\n            style={{ borderRight: \"1px solid #dddddd90\" }}\n            classes={{\n              tile: classes.tilePack,\n            }}\n          >\n            <Card elevation={0} classes={{ root: classes.cardRoot }}>\n              <CardMedia component=\"img\" image={pack} />\n              <CardActions\n                disableSpacing\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Button color=\"secondary\" variant=\"contained\" size=\"large\">\n                  Buy 25$\n                </Button>\n              </CardActions>\n            </Card>\n          </GridListTile>\n          {cardsToRender}\n        </GridList>\n      </ListItem>\n    </>\n  );\n};\n\nexport default ShopPackListItem;\n\ntype IProps = {\n  pack: string;\n  cards: string[];\n  setOpenModal: (image: string) => void;\n};\n","import List from \"@material-ui/core/List\";\nimport Modal from \"@material-ui/core/Modal\";\nimport React, { useState } from \"react\";\nimport { IImgModal } from \"../../utils/customTypes\";\nimport ShopPackListItem from \"./ShopPackListItem\";\n\nconst ShopPacksList = () => {\n  const [openModal, setOpenModal] = useState<IImgModal>({\n    open: false,\n    image: \"\",\n  });\n\n  //temporary some data to display\n  const packsData = [\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/5/57/Knights_of_the_Frozen_Throne_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/e/e8/Forged_in_the_Barrens_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/14/Legacy_-_Golden_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/1d/High_Inquisitor_Whitemane%2890686%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/9a/Bloodfen_Raptor%28464741%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/6/63/Harvest_Golem%28386%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/1d/High_Inquisitor_Whitemane%2890686%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/9a/Bloodfen_Raptor%28464741%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/6/63/Harvest_Golem%28386%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/5/57/Knights_of_the_Frozen_Throne_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/e/e8/Forged_in_the_Barrens_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        open={openModal.open}\n        onClose={() => setOpenModal({ open: false, image: \"\" })}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <img src={openModal.image}></img>\n      </Modal>\n      <List>\n        {packsData\n          ? packsData.map((step) => (\n              <ShopPackListItem\n                {...step}\n                setOpenModal={(image: string) =>\n                  setOpenModal({ open: true, image })\n                }\n              />\n            ))\n          : null}\n      </List>\n    </>\n  );\n};\n\nexport default ShopPacksList;\n","import { Container, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ShopPacksList from \"../components/Shop/ShopPacksList\";\n\nconst ShopPage = () => {\n  return (\n    <Container fixed>\n      <Typography variant=\"h2\">ShopPage</Typography>\n\n      <ShopPacksList />\n    </Container>\n  );\n};\n\nexport default withRouter(ShopPage);\n","import { Button } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\n\nconst NavBarApp = (props: IProps) => {\n  return (\n    <AppBar>\n      <Button\n        onClick={() => {\n          props.openMenu();\n        }}\n        startIcon={<MenuIcon />}\n        style={{ height: 50 }}\n      />\n    </AppBar>\n  );\n};\n\nexport default NavBarApp;\ntype IProps = {\n  openMenu: () => void;\n};\n","import { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { SvgIconTypeMap } from \"@material-ui/core/SvgIcon\";\nimport React, { ReactNode } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst SiderMenuListItem = (props: IProps) => {\n  const { index, selectedIndex, setSelectedIndex, icon, text, closeMenu } =\n    props;\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <ListItem\n      button\n      selected={selectedIndex === index}\n      onClick={() => {\n        setSelectedIndex(index);\n        if (\n          !(\n            location.pathname === \"/\" + text ||\n            (text === \"Home\" && location.pathname === \"/\")\n          )\n        ) {\n          history.push(text === \"Home\" ? \"/\" : `/${text}`);\n        }\n        closeMenu();\n      }}\n    >\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText>{text}</ListItemText>\n    </ListItem>\n  );\n};\n\nexport default SiderMenuListItem;\n\ntype IProps = {\n  index: number;\n  selectedIndex: number;\n  setSelectedIndex: (index: number) => void;\n  icon: ReactNode;\n  text: string;\n  closeMenu: () => void;\n};\n","import React, { useState } from \"react\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, ListItemIcon, Modal } from \"@material-ui/core\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer/SwipeableDrawer\";\nimport SiderMenuListItem from \"./SiderMenuListItem\";\n\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport GavelOutlinedIcon from \"@material-ui/icons/GavelOutlined\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport MapOutlinedIcon from \"@material-ui/icons/MapOutlined\";\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst useStyles = makeStyles({\n  paper: {\n    width: 200,\n    boxShadow: \"0px 0 50px -10px #444\",\n  },\n});\n\nconst SiderMenu = (props: IProps) => {\n  const classes = useStyles();\n  const { open, setOpen } = props;\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\n  const menuOpts = [\n    { text: \"Home\", icon: <HomeOutlinedIcon /> },\n    { text: \"Inventory\", icon: <DashboardOutlinedIcon /> },\n    { text: \"Journey\", icon: <MapOutlinedIcon /> },\n    { text: \"Shop\", icon: <ShoppingCartOutlinedIcon /> },\n    { text: \"Trade\", icon: <GavelOutlinedIcon /> },\n    { text: \"Settings\", icon: <SettingsIcon /> },\n  ];\n  return (\n    <SwipeableDrawer\n      classes={classes}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      open={open}\n      ModalProps={{ onBackdropClick: () => setOpen(false) }}\n      swipeAreaWidth={50}\n      hysteresis={0.2}\n      disableBackdropTransition\n    >\n      <List>\n        {menuOpts.map(({ text, icon }, index) => {\n          return (\n            <SiderMenuListItem\n              key={index}\n              text={text}\n              index={index}\n              selectedIndex={selectedIndex}\n              setSelectedIndex={(num: number) => setSelectedIndex(num)}\n              icon={icon}\n              closeMenu={() => setOpen(false)}\n            />\n          );\n        })}\n      </List>\n    </SwipeableDrawer>\n  );\n};\n\nexport default SiderMenu;\n\ntype IProps = {\n  open: boolean;\n  setOpen: (cal: boolean) => void;\n};\n","import React, { useState } from \"react\";\nimport NavBarApp from \"./NavBarApp/NavBarApp\";\nimport SiderMenu from \"./Sider/SiderMenu\";\n\nconst NavSider = () => {\n  const [openMenu, setOpenMenu] = useState(false);\n  return (\n    <>\n      <NavBarApp\n        openMenu={() => {\n          setOpenMenu(true);\n        }}\n      />\n      <SiderMenu open={openMenu} setOpen={(val: boolean) => setOpenMenu(val)} />\n    </>\n  );\n};\n\nexport default NavSider;\n","import { ListItem, TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst StatsListItem = (props:IProps)=>{\n\n    const {stat, setStat, statHelperText, name} = props;\n\n    return(\n        <ListItem style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <TextField\n          value={stat}\n          helperText={statHelperText}\n          error={!!statHelperText}\n\n          onChange={(e) => {setStat(+e.target.value) }}\n          inputProps={{ max: 99, min: 0 }}\n          style={{ minWidth: 150 }}\n          type=\"number\"\n          id={name}\n          label={name}\n          variant=\"outlined\"\n        />\n      </ListItem>\n    )\n\n}\n\nexport default StatsListItem\n\ntype IProps = {\n    stat:number | null,\n    setStat:(val:number)=>void,\n    statHelperText:string,\n    name:string,\n}","import {\n  Button,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from '@material-ui/lab/Alert';\n\nimport { Card, CardContent, Dialog, Slide, TextField } from \"@material-ui/core\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { IDialogProps } from \"../../pages/FillForm\";\nimport API from \"../../utils/API\";\nimport StatsListItem from \"./StatsListItem\";\n\nconst CharacterForm = (props: IProps) => {\n  const { open, name, thumbnail, id } = props.dialog;\n\n  const [agility, setAgility] = useState<number | null>(null);\n  const [strength, setStrength] = useState<number | null>(null);\n  const [magic, setMagic] = useState<number | null>(null);\n  const [resistance, setResistance] = useState<number | null>(null);\n\n  const [agilityHelperText,setAgilityHelperText] = useState<string>(\"\")\n  const [strengthHelperText,setStrengthHelperText] = useState<string>(\"\")\n  const [magicHelperText,setMagicHelperText] = useState<string>(\"\")\n  const [resistanceHelperText,setResistanceHelperText] = useState<string>(\"\")\n\n  const [openSnackBar,setOpenSnackBar] = useState<boolean>(false);\n\n    useEffect(()=>{\n        API.getCharacter(id).then(res=>{\n          console.log(res)\n          setAgility(res?.stats?.agility || 0);\n          setStrength(res?.stats?.strength || 0);\n          setMagic(res?.stats?.magic || 0);\n          setResistance(res?.stats?.resistance || 0);\n        }\n        ).catch(e=>console.error(e))\n    },[id])\n\n    const handleCloseSnackBar = ()=>{\n      setOpenSnackBar(false)\n    }\n\n    const validateStats = ()=>{\n      if (magic && agility && strength && resistance && id) {\n        const a = agility>=100 || agility < 0;\n        const m = magic>=100 || magic < 0;\n        const r = resistance>=100 || resistance < 0;\n        const s = strength>=100 || strength < 0;\n      if(a){\n        setAgilityHelperText(\"Number must be between 0 and 100\")\n      }else{\n        setAgilityHelperText(\"\")\n      }\n      if(m){\n        setMagicHelperText(\"Number must be between 0 and 100\")\n      }else{\n        setMagicHelperText(\"\")\n      }\n      if(r){\n        setResistanceHelperText(\"Number must be between 0 and 100\")\n      }else{\n        setResistanceHelperText(\"\")\n      }\n      if(s){\n        setStrengthHelperText(\"Number must be between 0 and 100\")\n      }else{\n        setStrengthHelperText(\"\")\n      }\n      if(a || m || r || s){\n        return false\n      }\n      else return true\n    }\n    return false\n    }\n\n  const handleSave = () => {\n    if (magic && agility && strength && resistance && id) {\n      if (validateStats()) {\n        API.addCharacter({\n          name,\n          thumbnail,\n          characterId:id,\n          stats: {\n            agility,\n            strength,\n            magic,\n            resistance,\n          },\n        }).then(()=>\n          setOpenSnackBar(true)\n          );\n        }\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onBackdropClick={() => {\n        props.setDialog({ ...props.dialog, open: false });\n      }}\n      TransitionComponent={Slide}\n      transitionDuration={500}\n      scroll=\"body\"\n    >\n      <Card>\n        <CardMedia component=\"img\" height=\"300\" src={thumbnail} />\n        <CardHeader title={name} subheader={id} />\n        <CardContent>\n          <Divider />\n          <form style={{ margin: 50 }} onSubmit={()=>handleSave()}>\n            <Typography variant=\"h4\">Stats</Typography>\n            <List>\n            <StatsListItem key=\"agility\" name=\"Agility\" stat={agility} setStat={setAgility} statHelperText={agilityHelperText}  />\n            <StatsListItem key=\"magic\" name=\"Magic\" stat={magic} setStat={setMagic} statHelperText={magicHelperText}  />\n            <StatsListItem key=\"resistance\" name=\"Resistance\" stat={resistance} setStat={setResistance} statHelperText={resistanceHelperText}  />            \n            <StatsListItem key=\"strength\" name=\"Strength\" stat={strength} setStat={setStrength} statHelperText={strengthHelperText}  />\n            \n            \n            </List>\n            <Button\n              onClick={()=>handleSave()}\n              fullWidth\n              color=\"secondary\"\n              size=\"large\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </form>\n\n        </CardContent>\n      </Card>\n      <Snackbar open={openSnackBar} autoHideDuration={3000} onClose={handleCloseSnackBar}>\n        <Alert onClose={handleCloseSnackBar} severity=\"success\" variant=\"filled\">\n          Succesfully updated stats!\n        </Alert>\n      </Snackbar>\n    </Dialog>\n  );\n};\n\nexport default CharacterForm;\n\ntype IProps = {\n  dialog: IDialogProps;\n  setDialog: (val: IDialogProps) => void;\n};\n\nexport type ICharacterInfo = {\n  name: string;\n  characterId: number;\n  thumbnail:string,\n  stats: {\n    agility: number;\n    magic: number;\n    resistance: number;\n    strength: number;\n  };\n};\n","import {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { IDialogProps } from \"../../pages/FillForm\";\n\nconst HeroFillFormListItem = (props: IProps) => {\n  const { name, thumbnail, id, dialog, setDialog } = props;\n\n  const handleOnClick = () => {\n    setDialog({\n      name,\n      thumbnail,\n      id,\n      open: true,\n    });\n  };\n\n  return (\n    <ListItem\n      button\n      onClick={() => {\n        handleOnClick();\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar src={thumbnail} />\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={id.toString()} />\n    </ListItem>\n  );\n};\n\nexport default HeroFillFormListItem;\n\ntype IProps = {\n  name: string;\n  thumbnail: string;\n  id: number;\n  dialog: IDialogProps;\n  setDialog: (val: IDialogProps) => void;\n};\n","import { Button, Container, Divider } from \"@material-ui/core\";\nimport { Box, CircularProgress, List } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { RouteComponentProps, useHistory, withRouter } from \"react-router-dom\";\nimport CharacterForm from \"../components/FillForm/CharacterForm\";\nimport HeroFillFormListItem from \"../components/FillForm/HeroFillFormListItem\";\nimport API from \"../utils/API\";\nimport { ICharacterData, IApiDataResponse } from \"../utils/customTypes\";\n\nconst FillForm = (props: IProps) => {\n  const [characters, setCharacters] = useState<ICharacterData[]>();\n  const apiResponse = useRef<IApiDataResponse>();\n  const history = useHistory();\n  const [loading,setLoading] = useState(true);\n  const [dialog,setDialog] = useState<IDialogProps>({name:\"test\",thumbnail:\"test\",id:120,open:false});\n\n\n\n  const { page: pageStr } = props.match.params;\n  const page = Number.parseInt(pageStr);\n\n  useEffect(() => {\n    API.call(\"characters\", { offset: 20 * page || 0 })\n      .then((res) => {\n        setLoading(true)\n        return (apiResponse.current = res?.data);\n      })\n      .then((res) => {setLoading(false);setCharacters(res?.results)})\n  }, [page]);\n\n  const handlePageChange = (page: number) => {\n    setLoading(true);\n    history.push(\"/fillform/\" + page);\n  };\n\n  return (\n    <>\n      <CharacterForm dialog={dialog} setDialog={setDialog} />\n      <Box\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container\n          style={{\n            padding: 50,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {page > 0 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page - 1)}\n            >\n              Previous Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n          {page < 74 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page + 1)}\n            >\n              Next Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n        </Container>\n        <Divider />\n\n        <List component=\"div\">\n          {characters!==undefined && !loading ? (\n            characters.map(({ id, thumbnail, name }) => {\n              return (\n                <HeroFillFormListItem\n                key={id}\n                  dialog={dialog}\n                  setDialog={setDialog}\n                  id={id}\n                  thumbnail={`${thumbnail.path}.${thumbnail.extension}`}\n                  name={name}\n                />\n              );\n            })\n          ) : (\n            <CircularProgress />\n          )}\n        </List>\n        <Divider />\n        <Container\n          style={{\n            padding: 50,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {page > 0 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page - 1)}\n            >\n              Previous Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n          {page < 74 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page + 1)}\n            >\n              Next Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default withRouter(FillForm);\n\ntype IProps = RouteComponentProps<{ page: string }>;\n\nexport type IDialogProps = {\n  name: string;\n  id: number;\n  thumbnail: string;\n  open: boolean;\n};\n","import { Box, Container } from '@material-ui/core';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport JourneyPage from './pages/JourneyPage';\nimport TradePage from './pages/TradePage';\nimport HomePage from './pages/HomePage';\nimport InventoryPage from './pages/InventoryPage';\nimport SettingsPage from './pages/SettingsPage';\nimport ShopPage from './pages/ShopPage';\nimport NavSider from './components/NavSider';\nimport React from 'react';\nimport FillForm from './pages/FillForm';\n\nfunction App() {\n\n\n  return (\n      <Router>\n    <Container>\n      <NavSider/>\n      <Box style={{marginBottom:50}}/>\n        <Switch>\n          <Route path=\"/fillform/:page\"><FillForm /></Route>\n          <Route path=\"/inventory\"><InventoryPage/></Route>\n          <Route path=\"/journey\"><JourneyPage/></Route>\n          <Route path=\"/settings\"><SettingsPage/></Route>\n          <Route path=\"/shop\"><ShopPage/></Route>\n          <Route path=\"/trade\"><TradePage/></Route>\n          <Route path=\"/\"><HomePage/></Route>\n        </Switch>\n    </Container>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './css/App.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}