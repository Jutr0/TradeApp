{"version":3,"sources":["pages/JourneyPage.tsx","pages/TradePage.tsx","pages/HomePage.tsx","components/HeroCard/HeroStatsListItem.tsx","components/HeroCard/HeroSatsList.tsx","components/HeroCard/HeroCard.tsx","utils/API.ts","pages/InventoryPage.tsx","pages/SettingsPage.tsx","components/Shop/CardFromPack.tsx","components/Shop/ShopPackListItem.tsx","components/Shop/ShopPacksList.tsx","pages/ShopPage.tsx","utils/UserContext.tsx","components/NavBarApp/Authentication/Register.tsx","utils/utils.ts","components/NavBarApp/Authentication/LogIn.tsx","components/NavBarApp/Authentication/LogOut.tsx","components/NavBarApp/Authentication/Authentication.tsx","components/NavBarApp/NavBarApp.tsx","components/Sider/SiderMenuListItem.tsx","components/Sider/SiderMenu.tsx","components/NavSider.tsx","components/FillForm/StatsListItem.tsx","components/FillForm/CharacterForm.tsx","components/FillForm/HeroFillFormListItem.tsx","pages/FillForm.tsx","App.tsx","index.tsx"],"names":["withRouter","Typography","variant","HeroStatsListItem","props","icon","stat","Divider","ListItem","ListItemAvatar","style","marginRight","marginLeft","ListItemText","primary","name","secondary","value","HeroStatsList","stats","health","strength","ability","swiftness","List","useStyles","makeStyles","media","height","heading","width","textAlign","padding","HeroCard","id","thumbnail","useState","statsCollapsed","setStatsCollapsed","classes","raised","setRaised","Grid","justifyItems","item","xs","sm","md","lg","xl","Card","cursor","onMouseEnter","onMouseLeave","onClick","className","noWrap","component","CardMedia","image","path","extension","CardContent","Collapse","position","background","boxShadow","in","API","this","defaultParams","params","baseURL","url","ts","apikey","hash","call","a","apiParams","axios","get","then","res","catch","e","console","error","apiResponse","data","addCharacter","character","post","getCharacter","isUser","email","password","user","addUser","currentUser","findUser","log","characters","setCharacters","useRef","useEffect","limit","current","results","Box","Container","fixed","container","spacing","justify","map","step","CircularProgress","CardFromPack","setOpenModal","elevation","tilePack","display","alignItems","tileCards","flexDirection","justifyContent","cardRoot","ShopPackListItem","cardsToRender","setCardsToRender","pack","cards","tempCardsToRender","Array","i","length","push","GridListTile","cols","rows","tile","GridList","cellHeight","borderRight","root","CardActions","disableSpacing","Button","color","size","ShopPacksList","open","openModal","packsData","Modal","onClose","src","UserContext","createContext","setUser","title","subheader","marginTop","RegisterForm","setDialog","dialog","useContext","username","setUsername","setPassword","repPassword","setRepPassword","setEmail","emailRef","usernameHelperText","setUsernameHelperText","passwordHelperText","setPasswordHelperText","repPasswordHelperText","setRepPasswordHelperText","emailHelperText","setEmailHelperText","handleRegister","register","test","String","toLowerCase","validateEmail","undefined","CardHeader","FormControl","fullWidth","InputLabel","htmlFor","Input","aria-describedby","onChange","target","FormHelperText","inputProps","type","marginBottom","content","Register","LogInForm","LogIn","LogOut","Authentication","val","minWidth","Dialog","scroll","onBackdropClick","NavBarApp","openMenu","AppBar","minHeight","startIcon","fontSize","SiderMenuListItem","index","selectedIndex","setSelectedIndex","text","closeMenu","history","useHistory","location","useLocation","button","selected","pathname","ListItemIcon","paper","SiderMenu","setOpen","menuOpts","onOpen","ModalProps","swipeAreaWidth","hysteresis","disableBackdropTransition","num","NavSider","setOpenMenu","StatsListItem","setStat","statHelperText","TextField","helperText","max","min","label","CharacterForm","agility","setAgility","setStrength","magic","setMagic","resistance","setResistance","agilityHelperText","setAgilityHelperText","strengthHelperText","setStrengthHelperText","magicHelperText","setMagicHelperText","resistanceHelperText","setResistanceHelperText","openSnackBar","setOpenSnackBar","handleCloseSnackBar","handleSave","m","r","s","validateStats","characterId","TransitionComponent","Slide","transitionDuration","margin","onSubmit","Snackbar","autoHideDuration","Alert","severity","HeroFillFormListItem","Avatar","toString","loading","setLoading","pageStr","match","page","Number","parseInt","offset","handlePageChange","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.156b8a54.chunk.js","sourcesContent":["import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst JourneyPage = () => {\n  return <Typography variant=\"h2\">JourneyPage</Typography>;\n};\n\nexport default withRouter(JourneyPage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst TradePage = () => {\n  return <Typography variant=\"h2\">TradePage</Typography>;\n};\n\nexport default withRouter(TradePage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst HomePage = () => {\n  return <Typography variant=\"h2\">HomePage</Typography>;\n};\n\nexport default withRouter(HomePage);\n","import {\n  Divider,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\nimport React, { ReactElement } from \"react\";\n\nconst HeroStatsListItem = (props: IProps) => {\n  const { icon, stat } = props;\n\n  return (\n    <>\n      <Divider />\n      <ListItem>\n        <ListItemAvatar style={{ marginRight: -20, marginLeft: -10 }}>\n          {icon}\n        </ListItemAvatar>\n        <ListItemText primary={stat.name} secondary={stat.value} />\n      </ListItem>\n    </>\n  );\n};\n\nexport default HeroStatsListItem;\n\ntype IProps = {\n  stat: {\n    name: string;\n    value: number;\n  };\n  icon: ReactElement;\n};\n","import {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\n\nimport FlashOnOutlinedIcon from \"@material-ui/icons/FlashOnOutlined\";\nimport FavoriteBorderOutlinedIcon from \"@material-ui/icons/FavoriteBorderOutlined\";\nimport EmojiSymbolsOutlinedIcon from \"@material-ui/icons/EmojiSymbolsOutlined\";\nimport DirectionsRunOutlinedIcon from \"@material-ui/icons/DirectionsRunOutlined\";\n\nimport HeroStatsListItem from \"./HeroStatsListItem\";\n\nconst HeroStatsList = (props: IProps) => {\n  const { health, strength, ability, swiftness } = props.stats;\n\n  return (\n    <List>\n      <HeroStatsListItem\n        stat={{ name: \"Health\", value: health }}\n        icon={<FavoriteBorderOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Strength\", value: strength }}\n        icon={<FlashOnOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Ability\", value: ability }}\n        icon={<EmojiSymbolsOutlinedIcon />}\n      />\n      <HeroStatsListItem\n        stat={{ name: \"Swiftness\", value: swiftness }}\n        icon={<DirectionsRunOutlinedIcon />}\n      />\n    </List>\n  );\n};\n\nexport default HeroStatsList;\n\ntype IProps = {\n  stats: {\n    health: number;\n    strength: number;\n    ability: number;\n    swiftness: number;\n  };\n};\n","import {\n  Card,\n  CardContent,\n  CardMedia,\n  Collapse,\n  Grid,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Typography from \"@material-ui/core/Typography\";\nimport React, { useState } from \"react\";\nimport { Ithumbnail } from \"../../utils/customTypes\";\nimport HeroStatsList from \"./HeroSatsList\";\n\nconst useStyles = makeStyles({\n  media: {\n    height: 100,\n  },\n  heading: {\n    width: \"100%\",\n    textAlign: \"center\",\n    padding: \"10px 0\",\n  },\n});\n\nconst HeroCard = (props: IProps) => {\n  const { id, name, thumbnail } = props;\n\n  const stats = { strength: 20, ability: 23, swiftness: 39, health: 54 };\n  const [statsCollapsed, setStatsCollapsed] = useState(false);\n  const classes = useStyles();\n  const [raised, setRaised] = useState(false);\n\n  return (\n    <Grid\n      style={{ justifyItems: \"center\" }}\n      item\n      xs={10}\n      sm={4}\n      md={3}\n      lg={2}\n      xl={1}\n    >\n      <Card\n        raised={raised}\n        style={{ cursor: \"pointer\" }}\n        onMouseEnter={() => setRaised(true)}\n        onMouseLeave={() => {\n          setRaised(false); /*setStatsCollapsed(false)*/\n        }}\n        onClick={() => setStatsCollapsed(!statsCollapsed)}\n      >\n        <Typography\n          className={classes.heading}\n          noWrap\n          variant=\"h5\"\n          component=\"div\"\n        >\n          {name}\n        </Typography>\n        <CardMedia\n          className={classes.media}\n          image={`${thumbnail.path}.${thumbnail.extension}`}\n        />\n        <CardContent>\n          <Typography variant=\"subtitle2\">Stats</Typography>\n\n          {/* Different style of collapsing stats but Worse in my opinion */}\n          <Collapse\n            style={\n              id < 0\n                ? {\n                    position: \"absolute\",\n                    background: \"white\",\n                    boxShadow: \"0 5px 5px 0 #555\",\n                  }\n                : {}\n            }\n            in={statsCollapsed}\n          >\n            <HeroStatsList stats={stats} />\n          </Collapse>\n        </CardContent>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default HeroCard;\n\ntype IProps = {\n  id: number;\n  name: string;\n  thumbnail: Ithumbnail;\n};\n","import axios from \"axios\";\nimport { ICharacterInfo } from \"../components/FillForm/CharacterForm\";\nimport { IApiResponse, ISearchParams, IUser } from \"./customTypes\";\n\nexport default class API {\n  //sets base parameters for api call\n  private static defaultParams: ISearchParams = {\n    ts: 1,\n    apikey: \"0496dd1c25a6148054d36d77a65cfe14\",\n    hash: \"1bc050ca4051e97e6e076c02cd39b807\",\n  };\n  static get getDefaultParams() {\n    return this.defaultParams;\n  }\n  static set setDefaultParams(params: ISearchParams) {\n    this.defaultParams = params;\n  }\n\n  //sets base URL for api call\n  private static baseURL: string = \"http://gateway.marvel.com/v1/public/\";\n  static get getBaseURL() {\n    return this.baseURL;\n  }\n  static set setBaseURL(url: string) {\n    this.baseURL = url;\n  }\n\n  //calls MarvelApi and returns data\n  static call = async (url?: string, params?: ISearchParams) => {\n    const apiParams = { ...API.defaultParams, ...(params || {}) };\n    const apiResponse = await axios\n      .get(API.baseURL + url, { params: apiParams })\n      .then((res: IApiResponse) => res)\n      .catch((e) => {\n        console.error(e);\n        return undefined;\n      });\n\n    return apiResponse?.data;\n  };\n\n  static addCharacter = async (character: ICharacterInfo) => {\n    await axios\n      .post(\"http://192.168.8.111:3001/api/characters\", character)\n      .catch((e) => console.error(e));\n  };\n  static getCharacter = async (id: number) => {\n    const character: ICharacterInfo | undefined = await axios\n      .get(\"http://192.168.8.111:3001/api/characters/\" + id)\n      .then((res: { data: ICharacterInfo }) => res.data)\n      .catch((e) => {\n        console.error(e);\n        return undefined;\n      });\n\n    return character;\n  };\n\n  static isUser = async (name: string, email?: string, password?: string) => {\n    const user: boolean = await axios\n      .get(\"http://192.168.8.111:3001/api/users/is\", {\n        params: { name, email, password },\n      })\n      .then((res) => res.data.isUser)\n      .catch((e) => console.error(e));\n    return user;\n  };\n\n  static addUser = async (user: IUser) => {\n    const currentUser: IUser = await axios\n      .post(\"http://192.168.8.111:3001/api/users/\", user)\n      .then((res) => res.data)\n      .catch((e) => console.error(e));\n    return currentUser;\n  };\n\n  static findUser = async (name: string) => {\n    const user: IUser = await axios\n      .get(\"http://192.168.8.111:3001/api/users/find\", { params: { name } })\n      .then((res) => {\n        console.log(res);\n        return res.data;\n      })\n      .catch((e) => console.log(e));\n\n    return user;\n  };\n}\n","import { Box, Container, Grid, Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport HeroCard from \"../components/HeroCard/HeroCard\";\nimport { IApiDataResponse, ICharacterData } from \"../utils/customTypes\";\nimport API from \"../utils/API\";\n\nconst InventoryPage = () => {\n  const [characters, setCharacters] = useState<ICharacterData[]>();\n  const apiResponse = useRef<IApiDataResponse>();\n\n  useEffect(() => {\n    API.call(\"characters\", { limit: 20 })\n      .then((res) => (apiResponse.current = res?.data))\n      .then((res) => setCharacters(res?.results));\n  }, []);\n  return (\n    <Box>\n      <Typography variant=\"h2\">InventoryPage</Typography>\n      <Container fixed>\n        <Grid container spacing={5} justify=\"center\">\n          {characters ? (\n            characters.map((step) => {\n              return (\n                <HeroCard\n                  key={step.id}\n                  id={step.id}\n                  thumbnail={step.thumbnail}\n                  name={step.name}\n                />\n              );\n            })\n          ) : (\n            <Grid item>\n              <CircularProgress />\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default withRouter(InventoryPage);\n","import { Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\n\nconst SettingsPage = () => {\n  return <Typography variant=\"h2\">SettingsPage</Typography>;\n};\n\nexport default withRouter(SettingsPage);\n","import { Card, CardMedia } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst CardFromPack = (props: IProps) => {\n  const { setOpenModal, image } = props;\n  return (\n    <Card\n      elevation={0}\n      onClick={() => {\n        setOpenModal(image);\n      }}\n    >\n      <CardMedia component=\"img\" image={image} />\n    </Card>\n  );\n};\n\nexport default CardFromPack;\n\ntype IProps = {\n  image: string;\n  setOpenModal: (image: string) => void;\n};\n","import {\n  Button,\n  CardActions,\n  CardMedia,\n  Divider,\n  Grid,\n  GridList,\n  GridListTile,\n  ListItem,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { IImgModal } from \"../../utils/customTypes\";\nimport CardFromPack from \"./CardFromPack\";\n\nconst useStyles = makeStyles({\n  tilePack: {\n    display: \"flex\",\n    alignItems: \"stretch\",\n  },\n  tileCards: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n  },\n\n  cardRoot: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\",\n  },\n});\n\nconst ShopPackListItem = (props: IProps) => {\n  const classes = useStyles();\n\n  const [cardsToRender, setCardsToRender] = useState<JSX.Element[]>([]);\n  const { pack, cards, setOpenModal } = props;\n\n  useEffect(() => {\n    let tempCardsToRender = Array<JSX.Element>(0);\n    for (let i = 0; i < cards.length; i += 2) {\n      tempCardsToRender.push(\n        <GridListTile\n          cols={2}\n          rows={2}\n          classes={{\n            tile: classes.tileCards,\n          }}\n        >\n          <CardFromPack\n            image={cards[i]}\n            setOpenModal={(image: string) => setOpenModal(image)}\n          />\n          <CardFromPack\n            image={cards[i + 1]}\n            setOpenModal={(image: string) => setOpenModal(image)}\n          />\n        </GridListTile>\n      );\n    }\n\n    setCardsToRender(tempCardsToRender);\n  }, []);\n\n  return (\n    <>\n      <br />\n      <Divider />\n      <br />\n      <ListItem>\n        <GridList cellHeight=\"auto\" cols={9}>\n          <GridListTile\n            cols={3}\n            rows={2}\n            style={{ borderRight: \"1px solid #dddddd90\" }}\n            classes={{\n              tile: classes.tilePack,\n            }}\n          >\n            <Card elevation={0} classes={{ root: classes.cardRoot }}>\n              <CardMedia component=\"img\" image={pack} />\n              <CardActions\n                disableSpacing\n                style={{ display: \"flex\", justifyContent: \"center\" }}\n              >\n                <Button color=\"secondary\" variant=\"contained\" size=\"large\">\n                  Buy 25$\n                </Button>\n              </CardActions>\n            </Card>\n          </GridListTile>\n          {cardsToRender}\n        </GridList>\n      </ListItem>\n    </>\n  );\n};\n\nexport default ShopPackListItem;\n\ntype IProps = {\n  pack: string;\n  cards: string[];\n  setOpenModal: (image: string) => void;\n};\n","import List from \"@material-ui/core/List\";\nimport Modal from \"@material-ui/core/Modal\";\nimport React, { useState } from \"react\";\nimport { IImgModal } from \"../../utils/customTypes\";\nimport ShopPackListItem from \"./ShopPackListItem\";\n\nconst ShopPacksList = () => {\n  const [openModal, setOpenModal] = useState<IImgModal>({\n    open: false,\n    image: \"\",\n  });\n\n  //temporary some data to display\n  const packsData = [\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/5/57/Knights_of_the_Frozen_Throne_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/e/e8/Forged_in_the_Barrens_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/14/Legacy_-_Golden_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/1d/High_Inquisitor_Whitemane%2890686%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/9a/Bloodfen_Raptor%28464741%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/6/63/Harvest_Golem%28386%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/1/1d/High_Inquisitor_Whitemane%2890686%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/9a/Bloodfen_Raptor%28464741%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/6/63/Harvest_Golem%28386%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/5/57/Knights_of_the_Frozen_Throne_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/bb/Thrall%2C_Deathseer%2862861%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/26/Eternal_Servitude%2861835%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/2/20/Blood-Queen_Lana%27thel%2861814%29.png\",\n      ],\n    },\n    {\n      pack: \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/e/e8/Forged_in_the_Barrens_-_Card_pack.png\",\n      cards: [\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/9/95/Firemancer_Flurgl%28487662%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/7/7c/Kurtrus_Ashfallen%28487634%29.png\",\n        \"https://static.wikia.nocookie.net/hearthstone_gamepedia/images/b/b2/Shadow_Hunter_Vol%27jin%28463925%29.png\",\n      ],\n    },\n  ];\n\n  return (\n    <>\n      <Modal\n        open={openModal.open}\n        onClose={() => setOpenModal({ open: false, image: \"\" })}\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <img src={openModal.image}></img>\n      </Modal>\n      <List>\n        {packsData\n          ? packsData.map((step) => (\n              <ShopPackListItem\n                {...step}\n                setOpenModal={(image: string) =>\n                  setOpenModal({ open: true, image })\n                }\n              />\n            ))\n          : null}\n      </List>\n    </>\n  );\n};\n\nexport default ShopPacksList;\n","import { Container, Typography } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport ShopPacksList from \"../components/Shop/ShopPacksList\";\n\nconst ShopPage = () => {\n  return (\n    <Container fixed>\n      <Typography variant=\"h2\">ShopPage</Typography>\n\n      <ShopPacksList />\n    </Container>\n  );\n};\n\nexport default withRouter(ShopPage);\n","import { createContext } from \"react\";\nimport { IUser } from \"./customTypes\";\n\nexport const UserContext = createContext<IUserContext>({\n  user: null,\n  setUser: () => {},\n});\n\nexport type IUserContext = {\n  user: IUser | null;\n  setUser: (val: IUser | null) => void;\n};\n","import {\n  Box,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  List,\n  ListItem,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Button, Typography } from \"@material-ui/core\";\nimport { LensTwoTone } from \"@material-ui/icons\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport API from \"../../../utils/API\";\nimport { UserContext } from \"../../../utils/UserContext\";\nimport { validateEmail, validatePassword } from \"../../../utils/utils\";\nimport { IAuthenticationDialog } from \"./Authentication\";\n\nconst useStyles = makeStyles({\n  title: {\n    textAlign: \"center\",\n  },\n  subheader: {\n    textAlign: \"center\",\n  },\n  root: {\n    marginTop: 20,\n  },\n});\n\nconst Register = (props: IRegister) => {\n  const { setDialog, dialog } = props;\n\n  return (\n    <Button\n      onClick={() =>\n        setDialog({\n          open: true,\n          content: <RegisterForm setDialog={setDialog} dialog={dialog} />,\n        })\n      }\n      color=\"secondary\"\n      variant=\"contained\"\n    >\n      Register\n    </Button>\n  );\n};\n\nconst RegisterForm = (props: IRegister) => {\n  const classes = useStyles();\n\n  const { setDialog, dialog } = props;\n  const { setUser } = useContext(UserContext);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repPassword, setRepPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const emailRef = useRef(\"\");\n  const passwordRef = useRef(\"\");\n  const repPasswordRef = useRef(\"\");\n\n  const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n  const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n  const [repPasswordHelperText, setRepPasswordHelperText] = useState(\"\");\n  const [emailHelperText, setEmailHelperText] = useState(\"\");\n\n  const handleRegister = () => {\n    if (usernameHelperText) setUsernameHelperText(\"\");\n    let register = true;\n    if (!validateEmail(email)) {\n      setEmailHelperText(\"Incorrect email\");\n      register = false;\n    } else {\n      setEmailHelperText(\"\");\n    }\n    if (!validatePassword(password)) {\n      setPasswordHelperText(\n        \"Password must contain minimum 8 characters, 1 letter and 1 number\"\n      );\n      register = false;\n    } else {\n      setPasswordHelperText(\"\");\n    }\n    if (password !== repPassword) {\n      setRepPasswordHelperText(\"Passwords are different\");\n      register = false;\n    } else {\n      setRepPasswordHelperText(\"\");\n    }\n    if (register) {\n      API.isUser(username, email).then((res) => {\n        if (res) {\n          setUsernameHelperText(\"This username or email is already in use\");\n        } else if (res !== undefined) {\n          API.addUser({ name: username, email, password }).then((res) =>\n            {setUser(res)\n            setDialog({...dialog,open:false})}\n          );\n        }\n      });\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        className={classes.title + \" \" + classes.subheader + \" \" + classes.root}\n        title=\"Create your account\"\n        subheader=\"It's totally free\"\n      />\n      <CardContent>\n        <List>\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                error={!!usernameHelperText}\n                id=\"username\"\n                aria-describedby=\"usernameHelperText\"\n                value={username}\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n              <FormHelperText id=\"usernameHelperText\">\n                {usernameHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                fullWidth\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                inputProps={{ type: \"password\" }}\n                error={!!passwordHelperText}\n                id=\"password\"\n                aria-describedby=\"passwordHelperText\"\n              />\n              <FormHelperText id=\"passwordHelperText\">\n                {passwordHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"repPassword\">Repeat password</InputLabel>\n              <Input\n                value={repPassword}\n                onChange={(e) => {\n                  setRepPassword(e.target.value);\n                }}\n                inputProps={{ type: \"password\" }}\n                error={!!repPasswordHelperText}\n                id=\"repPassword\"\n                aria-describedby=\"repPasswordHelperText\"\n              />\n              <FormHelperText id=\"repPasswordHelperText\">\n                {repPasswordHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"email\">Email address</InputLabel>\n              <Input\n                value={email}\n                error={!!emailHelperText}\n                id=\"email\"\n                aria-describedby=\"emailHelperText\"\n                onChange={(e) => {\n                  emailRef.current = e.target.value;\n                  setEmail(emailRef.current);\n                }}\n              />\n              <FormHelperText id=\"emailHelperText\">\n                {emailHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n        </List>\n      </CardContent>\n      <CardActions\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          marginBottom: 20,\n        }}\n      >\n        <Button\n          onClick={() => {\n            setDialog({ content: <></>, open: false });\n          }}\n          size=\"large\"\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Cancel\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            handleRegister();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Register\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Register;\n\ntype IRegister = {\n  setDialog: (val: IAuthenticationDialog) => void;\n  dialog: IAuthenticationDialog;\n};\n","export const validateEmail = (email: string) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexport const validatePassword = (pass: string) => {\n  const re = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/;\n  return re.test(pass);\n};\n","import {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  FormControl,\n  FormHelperText,\n  Input,\n  InputLabel,\n  List,\n  ListItem,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport API from \"../../../utils/API\";\nimport { UserContext } from \"../../../utils/UserContext\";\nimport { validateEmail, validatePassword } from \"../../../utils/utils\";\nimport { IAuthenticationDialog } from \"./Authentication\";\n\nconst useStyles = makeStyles({\n  title: {\n    textAlign: \"center\",\n  },\n  subheader: {\n    textAlign: \"center\",\n  },\n  root: {\n    marginTop: 20,\n  },\n});\n\nconst LogIn = (props: ILogIn) => {\n  const { dialog, setDialog } = props;\n\n  return (\n    <Button\n      onClick={() =>\n        setDialog({\n          open: true,\n          content: <LogInForm setDialog={setDialog} dialog={dialog} />,\n        })\n      }\n      color=\"secondary\"\n      variant=\"contained\"\n    >\n      Log In\n    </Button>\n  );\n};\n\nconst LogInForm = (props: ILogIn) => {\n  const classes = useStyles();\n\n  const { setDialog, dialog } = props;\n\n  const { setUser } = useContext(UserContext);\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const [usernameHelperText, setUsernameHelperText] = useState(\"\");\n  const [passwordHelperText, setPasswordHelperText] = useState(\"\");\n\n  const handleLogIn = () => {\n    let logIn = true;\n\n    if (logIn) {\n      API.isUser(username, undefined, password).then((res) => {\n        if (res) {\n          API.findUser(username).then((res) => {\n            console.log(res);\n            setUsernameHelperText(\"\");\n            setUser(res);\n            setDialog({...dialog,open:false})\n          });\n        } else if (res !== undefined) {\n          setUsernameHelperText(\"Wrong username or password\");\n        }\n      });\n    }\n  };\n\n  return (\n    <Card>\n      <CardHeader\n        className={classes.title + \" \" + classes.root}\n        title=\"Log In\"\n      />\n      <CardContent>\n        <List>\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"username\">Username</InputLabel>\n              <Input\n                error={!!usernameHelperText}\n                id=\"username\"\n                aria-describedby=\"usernameHelperText\"\n                value={username}\n                onChange={(e) => {\n                  setUsername(e.target.value);\n                }}\n              />\n              <FormHelperText id=\"usernameHelperText\">\n                {usernameHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n\n          <ListItem>\n            <FormControl fullWidth>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                fullWidth\n                value={password}\n                onChange={(e) => {\n                  setPassword(e.target.value);\n                }}\n                inputProps={{ type: \"password\" }}\n                error={!!passwordHelperText}\n                id=\"password\"\n                aria-describedby=\"passwordHelperText\"\n              />\n              <FormHelperText id=\"passwordHelperText\">\n                {passwordHelperText}\n              </FormHelperText>\n            </FormControl>\n          </ListItem>\n        </List>\n      </CardContent>\n      <CardActions\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-evenly\",\n          marginBottom: 20,\n        }}\n      >\n        <Button\n          onClick={() => {\n            setDialog({ content: <></>, open: false });\n          }}\n          size=\"large\"\n          color=\"secondary\"\n          variant=\"outlined\"\n        >\n          Cancel\n        </Button>\n        <Button\n          size=\"large\"\n          onClick={() => {\n            handleLogIn();\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Log In\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default LogIn;\n\ntype ILogIn = {\n  setDialog: (val: IAuthenticationDialog) => void;\n  dialog: IAuthenticationDialog;\n};\n","import { Button } from \"@material-ui/core\";\nimport React, { useContext } from \"react\";\nimport { UserContext } from \"../../../utils/UserContext\";\nimport { IAuthenticationDialog } from \"./Authentication\";\n\nconst LogOut = (props: IProps) => {\n\n  const { dialog, setDialog } = props;\n\n  const {user, setUser } = useContext(UserContext);\n\n  const handleLogOut = () => {\n    setUser(null);\n  };\n\n  return (<div style={{display:\"flex\", alignItems:\"center\"}}>\n    <span style={{marginRight:\"1rem\"}}>\n      Hello {user?.name}! \n    </span>\n\n    <Button onClick={handleLogOut} color=\"secondary\" variant=\"contained\">\n      Log Out\n    </Button>\n  </div>\n  );\n};\n\nexport default LogOut;\n\ntype IProps = {\n  dialog: IAuthenticationDialog;\n  setDialog: (val: IAuthenticationDialog) => void;\n};\n","import Register from \"./Register\";\nimport LogIn from \"./LogIn\";\nimport LogOut from \"./LogOut\";\nimport React, { useContext, useState } from \"react\";\nimport { UserContext } from \"../../../utils/UserContext\";\nimport { Dialog } from \"@material-ui/core\";\n\nconst Authentication = () => {\n  const { user } = useContext(UserContext);\n\n  const [dialog, setDialog] = useState<IAuthenticationDialog>({\n    open: false,\n    content: <></>,\n  });\n\n  return (\n    <>\n      {user ? (\n        <LogOut\n          setDialog={(val: IAuthenticationDialog) => setDialog(val)}\n          dialog={dialog}\n        />\n      ) : (\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            minWidth: 200,\n            justifyContent: \"space-between\",\n          }}\n        >\n          <LogIn\n            setDialog={(val: IAuthenticationDialog) => setDialog(val)}\n            dialog={dialog}\n          />\n          <Register\n            setDialog={(val: IAuthenticationDialog) => setDialog(val)}\n            dialog={dialog}\n          />\n        </div>\n      )}\n      <Dialog\n        scroll=\"body\"\n        open={dialog.open}\n        onBackdropClick={() => setDialog({ ...dialog, open: false })}\n      >\n        {dialog.content}\n      </Dialog>\n    </>\n  );\n};\n\nexport default Authentication;\n\nexport type IAuthenticationDialog = {\n  open: boolean;\n  content: JSX.Element;\n};\n","import { Dialog, Modal } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport React from \"react\";\nimport Authentication from \"./Authentication/Authentication\";\n\nconst NavBarApp = (props: IProps) => {\n  const { openMenu } = props;\n\n  return (\n    <AppBar\n      color=\"primary\"\n      style={{\n        minHeight: 50,\n        justifyContent: \"space-between\",\n        padding: \"0 20px\",\n        flexDirection: \"row\",\n      }}\n    >\n      <Button\n        onClick={() => {\n          openMenu();\n        }}\n        startIcon={<MenuIcon fontSize=\"large\" />}\n        style={{ minWidth: 100, height: 50 }}\n      />\n      <Authentication />\n    </AppBar>\n  );\n};\n\nexport default NavBarApp;\ntype IProps = {\n  openMenu: () => void;\n};\n","import { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { SvgIconTypeMap } from \"@material-ui/core/SvgIcon\";\nimport React, { ReactNode } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst SiderMenuListItem = (props: IProps) => {\n  const { index, selectedIndex, setSelectedIndex, icon, text, closeMenu } =\n    props;\n  const history = useHistory();\n  const location = useLocation();\n\n  return (\n    <ListItem\n      button\n      selected={selectedIndex === index}\n      onClick={() => {\n        setSelectedIndex(index);\n        if (\n          !(\n            location.pathname === \"/\" + text ||\n            (text === \"Home\" && location.pathname === \"/\")\n          )\n        ) {\n          history.push(text === \"Home\" ? \"/\" : `/${text}`);\n        }\n        closeMenu();\n      }}\n    >\n      <ListItemIcon>{icon}</ListItemIcon>\n      <ListItemText>{text}</ListItemText>\n    </ListItem>\n  );\n};\n\nexport default SiderMenuListItem;\n\ntype IProps = {\n  index: number;\n  selectedIndex: number;\n  setSelectedIndex: (index: number) => void;\n  icon: ReactNode;\n  text: string;\n  closeMenu: () => void;\n};\n","import React, { useState } from \"react\";\n\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { List, ListItem, ListItemIcon, Modal } from \"@material-ui/core\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer/SwipeableDrawer\";\nimport SiderMenuListItem from \"./SiderMenuListItem\";\n\nimport HomeOutlinedIcon from \"@material-ui/icons/HomeOutlined\";\nimport GavelOutlinedIcon from \"@material-ui/icons/GavelOutlined\";\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\nimport MapOutlinedIcon from \"@material-ui/icons/MapOutlined\";\nimport DashboardOutlinedIcon from \"@material-ui/icons/DashboardOutlined\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nconst useStyles = makeStyles({\n  paper: {\n    width: 200,\n    boxShadow: \"0px 0 50px -10px #444\",\n  },\n});\n\nconst SiderMenu = (props: IProps) => {\n  const classes = useStyles();\n  const { open, setOpen } = props;\n  const [selectedIndex, setSelectedIndex] = useState<number>(0);\n  const menuOpts = [\n    { text: \"Home\", icon: <HomeOutlinedIcon /> },\n    { text: \"Inventory\", icon: <DashboardOutlinedIcon /> },\n    { text: \"Journey\", icon: <MapOutlinedIcon /> },\n    { text: \"Shop\", icon: <ShoppingCartOutlinedIcon /> },\n    { text: \"Trade\", icon: <GavelOutlinedIcon /> },\n    { text: \"Settings\", icon: <SettingsIcon /> },\n  ];\n  return (\n    <SwipeableDrawer\n      classes={classes}\n      onOpen={() => setOpen(true)}\n      onClose={() => setOpen(false)}\n      open={open}\n      ModalProps={{ onBackdropClick: () => setOpen(false) }}\n      swipeAreaWidth={50}\n      hysteresis={0.2}\n      disableBackdropTransition\n    >\n      <List>\n        {menuOpts.map(({ text, icon }, index) => {\n          return (\n            <SiderMenuListItem\n              key={index}\n              text={text}\n              index={index}\n              selectedIndex={selectedIndex}\n              setSelectedIndex={(num: number) => setSelectedIndex(num)}\n              icon={icon}\n              closeMenu={() => setOpen(false)}\n            />\n          );\n        })}\n      </List>\n    </SwipeableDrawer>\n  );\n};\n\nexport default SiderMenu;\n\ntype IProps = {\n  open: boolean;\n  setOpen: (cal: boolean) => void;\n};\n","import React, { useState } from \"react\";\nimport NavBarApp from \"./NavBarApp/NavBarApp\";\nimport SiderMenu from \"./Sider/SiderMenu\";\n\nconst NavSider = () => {\n  const [openMenu, setOpenMenu] = useState(false);\n  return (\n    <>\n      <NavBarApp\n        openMenu={() => {\n          setOpenMenu(true);\n        }}\n      />\n      <SiderMenu open={openMenu} setOpen={(val: boolean) => setOpenMenu(val)} />\n    </>\n  );\n};\n\nexport default NavSider;\n","import { ListItem, TextField } from \"@material-ui/core\";\nimport React from \"react\";\n\nconst StatsListItem = (props: IProps) => {\n  const { stat, setStat, statHelperText, name } = props;\n\n  return (\n    <ListItem style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <TextField\n        value={stat}\n        helperText={statHelperText}\n        error={!!statHelperText}\n        onChange={(e) => {\n          setStat(+e.target.value);\n        }}\n        inputProps={{ max: 99, min: 0 }}\n        style={{ minWidth: 150 }}\n        type=\"number\"\n        id={name}\n        label={name}\n        variant=\"outlined\"\n      />\n    </ListItem>\n  );\n};\n\nexport default StatsListItem;\n\ntype IProps = {\n  stat: number | null;\n  setStat: (val: number) => void;\n  statHelperText: string;\n  name: string;\n};\n","import {\n  Button,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  Snackbar,\n  Typography,\n} from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { Card, CardContent, Dialog, Slide, TextField } from \"@material-ui/core\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { IDialogProps } from \"../../pages/FillForm\";\nimport API from \"../../utils/API\";\nimport StatsListItem from \"./StatsListItem\";\n\nconst CharacterForm = (props: IProps) => {\n  const { open, name, thumbnail, id } = props.dialog;\n\n  const [agility, setAgility] = useState<number | null>(null);\n  const [strength, setStrength] = useState<number | null>(null);\n  const [magic, setMagic] = useState<number | null>(null);\n  const [resistance, setResistance] = useState<number | null>(null);\n\n  const [agilityHelperText, setAgilityHelperText] = useState<string>(\"\");\n  const [strengthHelperText, setStrengthHelperText] = useState<string>(\"\");\n  const [magicHelperText, setMagicHelperText] = useState<string>(\"\");\n  const [resistanceHelperText, setResistanceHelperText] = useState<string>(\"\");\n\n  const [openSnackBar, setOpenSnackBar] = useState<boolean>(false);\n\n  useEffect(() => {\n    API.getCharacter(id)\n      .then((res) => {\n        console.log(res);\n        setAgility(res?.stats?.agility || 0);\n        setStrength(res?.stats?.strength || 0);\n        setMagic(res?.stats?.magic || 0);\n        setResistance(res?.stats?.resistance || 0);\n      })\n      .catch((e) => console.error(e));\n  }, [id]);\n\n  const handleCloseSnackBar = () => {\n    setOpenSnackBar(false);\n  };\n\n  const validateStats = () => {\n    if (magic && agility && strength && resistance && id) {\n      const a = agility >= 100 || agility < 0;\n      const m = magic >= 100 || magic < 0;\n      const r = resistance >= 100 || resistance < 0;\n      const s = strength >= 100 || strength < 0;\n      if (a) {\n        setAgilityHelperText(\"Number must be between 0 and 100\");\n      } else {\n        setAgilityHelperText(\"\");\n      }\n      if (m) {\n        setMagicHelperText(\"Number must be between 0 and 100\");\n      } else {\n        setMagicHelperText(\"\");\n      }\n      if (r) {\n        setResistanceHelperText(\"Number must be between 0 and 100\");\n      } else {\n        setResistanceHelperText(\"\");\n      }\n      if (s) {\n        setStrengthHelperText(\"Number must be between 0 and 100\");\n      } else {\n        setStrengthHelperText(\"\");\n      }\n      if (a || m || r || s) {\n        return false;\n      } else return true;\n    }\n    return false;\n  };\n\n  const handleSave = () => {\n    if (magic && agility && strength && resistance && id) {\n      if (validateStats()) {\n        API.addCharacter({\n          name,\n          thumbnail,\n          characterId: id,\n          stats: {\n            agility,\n            strength,\n            magic,\n            resistance,\n          },\n        }).then(() => setOpenSnackBar(true));\n      }\n    }\n  };\n\n  return (\n    <Dialog\n      open={open}\n      onBackdropClick={() => {\n        props.setDialog({ ...props.dialog, open: false });\n      }}\n      TransitionComponent={Slide}\n      transitionDuration={500}\n      scroll=\"body\"\n    >\n      <Card>\n        <CardMedia component=\"img\" height=\"300\" src={thumbnail} />\n        <CardHeader title={name} subheader={id} />\n        <CardContent>\n          <Divider />\n          <form style={{ margin: 50 }} onSubmit={() => handleSave()}>\n            <Typography variant=\"h4\">Stats</Typography>\n            <List>\n              <StatsListItem\n                key=\"agility\"\n                name=\"Agility\"\n                stat={agility}\n                setStat={setAgility}\n                statHelperText={agilityHelperText}\n              />\n              <StatsListItem\n                key=\"magic\"\n                name=\"Magic\"\n                stat={magic}\n                setStat={setMagic}\n                statHelperText={magicHelperText}\n              />\n              <StatsListItem\n                key=\"resistance\"\n                name=\"Resistance\"\n                stat={resistance}\n                setStat={setResistance}\n                statHelperText={resistanceHelperText}\n              />\n              <StatsListItem\n                key=\"strength\"\n                name=\"Strength\"\n                stat={strength}\n                setStat={setStrength}\n                statHelperText={strengthHelperText}\n              />\n            </List>\n            <Button\n              onClick={() => handleSave()}\n              fullWidth\n              color=\"secondary\"\n              size=\"large\"\n              variant=\"contained\"\n            >\n              Save\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n      <Snackbar\n        open={openSnackBar}\n        autoHideDuration={3000}\n        onClose={handleCloseSnackBar}\n      >\n        <Alert\n          onClose={handleCloseSnackBar}\n          severity=\"success\"\n          variant=\"filled\"\n        >\n          Succesfully updated stats!\n        </Alert>\n      </Snackbar>\n    </Dialog>\n  );\n};\n\nexport default CharacterForm;\n\ntype IProps = {\n  dialog: IDialogProps;\n  setDialog: (val: IDialogProps) => void;\n};\n\nexport type ICharacterInfo = {\n  name: string;\n  characterId: number;\n  thumbnail: string;\n  stats: {\n    agility: number;\n    magic: number;\n    resistance: number;\n    strength: number;\n  };\n};\n","import {\n  Avatar,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport { IDialogProps } from \"../../pages/FillForm\";\n\nconst HeroFillFormListItem = (props: IProps) => {\n  const { name, thumbnail, id, dialog, setDialog } = props;\n\n  const handleOnClick = () => {\n    setDialog({\n      name,\n      thumbnail,\n      id,\n      open: true,\n    });\n  };\n\n  return (\n    <ListItem\n      button\n      onClick={() => {\n        handleOnClick();\n      }}\n    >\n      <ListItemAvatar>\n        <Avatar src={thumbnail} />\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={id.toString()} />\n    </ListItem>\n  );\n};\n\nexport default HeroFillFormListItem;\n\ntype IProps = {\n  name: string;\n  thumbnail: string;\n  id: number;\n  dialog: IDialogProps;\n  setDialog: (val: IDialogProps) => void;\n};\n","import { Button, Container, Divider } from \"@material-ui/core\";\nimport { Box, CircularProgress, List } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { RouteComponentProps, useHistory, withRouter } from \"react-router-dom\";\nimport CharacterForm from \"../components/FillForm/CharacterForm\";\nimport HeroFillFormListItem from \"../components/FillForm/HeroFillFormListItem\";\nimport API from \"../utils/API\";\nimport { ICharacterData, IApiDataResponse } from \"../utils/customTypes\";\n\nconst FillForm = (props: IProps) => {\n  const [characters, setCharacters] = useState<ICharacterData[]>();\n  const apiResponse = useRef<IApiDataResponse>();\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [dialog, setDialog] = useState<IDialogProps>({\n    name: \"test\",\n    thumbnail: \"test\",\n    id: 120,\n    open: false,\n  });\n\n  const { page: pageStr } = props.match.params;\n  const page = Number.parseInt(pageStr);\n\n  useEffect(() => {\n    API.call(\"characters\", { offset: 20 * page || 0 })\n      .then((res) => {\n        setLoading(true);\n        return (apiResponse.current = res?.data);\n      })\n      .then((res) => {\n        setLoading(false);\n        setCharacters(res?.results);\n      });\n  }, [page]);\n\n  const handlePageChange = (page: number) => {\n    setLoading(true);\n    history.push(\"/fillform/\" + page);\n  };\n\n  return (\n    <>\n      <CharacterForm dialog={dialog} setDialog={setDialog} />\n      <Box\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Container\n          style={{\n            padding: 50,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {page > 0 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page - 1)}\n            >\n              Previous Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n          {page < 74 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page + 1)}\n            >\n              Next Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n        </Container>\n        <Divider />\n\n        <List component=\"div\">\n          {characters !== undefined && !loading ? (\n            characters.map(({ id, thumbnail, name }) => {\n              return (\n                <HeroFillFormListItem\n                  key={id}\n                  dialog={dialog}\n                  setDialog={setDialog}\n                  id={id}\n                  thumbnail={`${thumbnail.path}.${thumbnail.extension}`}\n                  name={name}\n                />\n              );\n            })\n          ) : (\n            <CircularProgress />\n          )}\n        </List>\n        <Divider />\n        <Container\n          style={{\n            padding: 50,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          {page > 0 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page - 1)}\n            >\n              Previous Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n          {page < 74 ? (\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={() => handlePageChange(page + 1)}\n            >\n              Next Page\n            </Button>\n          ) : (\n            <Button />\n          )}\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default withRouter(FillForm);\n\ntype IProps = RouteComponentProps<{ page: string }>;\n\nexport type IDialogProps = {\n  name: string;\n  id: number;\n  thumbnail: string;\n  open: boolean;\n};\n","import { Box, Container } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport JourneyPage from \"./pages/JourneyPage\";\nimport TradePage from \"./pages/TradePage\";\nimport HomePage from \"./pages/HomePage\";\nimport InventoryPage from \"./pages/InventoryPage\";\nimport SettingsPage from \"./pages/SettingsPage\";\nimport ShopPage from \"./pages/ShopPage\";\nimport NavSider from \"./components/NavSider\";\nimport FillForm from \"./pages/FillForm\";\nimport { UserContext } from \"./utils/UserContext\";\nimport { useState } from \"react\";\nimport { IUser } from \"./utils/customTypes\";\n\nfunction App() {\n  const [user, setUser] = useState<IUser | null>(null);\n\n  return (\n    <Router>\n      <UserContext.Provider value={{ user, setUser }}>\n        <Container>\n          <NavSider />\n          <Box style={{ marginBottom: 50 }} />\n          <Switch>\n            <Route path=\"/fillform/:page\">\n              <FillForm />\n            </Route>\n            <Route path=\"/inventory\">\n              <InventoryPage />\n            </Route>\n            <Route path=\"/journey\">\n              <JourneyPage />\n            </Route>\n            <Route path=\"/settings\">\n              <SettingsPage />\n            </Route>\n            <Route path=\"/shop\">\n              <ShopPage />\n            </Route>\n            <Route path=\"/trade\">\n              <TradePage />\n            </Route>\n            <Route path=\"/\">\n              <HomePage />\n            </Route>\n          </Switch>\n        </Container>\n      </UserContext.Provider>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./css/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}